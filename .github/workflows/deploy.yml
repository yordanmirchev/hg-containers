name: Deployment (Container)
on:
  push:
    branches:
      - master
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    container: 
      image: node:16
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb # this is set according to the image requirments 
      MONGODB_CLUSTER_ADDRESS:  mongoDb: #this is the same as the label of the service 
      MONGODB_USERNAME: root # the same as the one in the service image
      MONGODB_PASSWORD: example # the same as the one in the service image
      PORT: 8080
    services:
      mongoDb: #label is up to us 
        image: mongo #we need to start with an image, as the service is in a container
        env: # dependiong on the iammge additional env settings is provided
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example          
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
